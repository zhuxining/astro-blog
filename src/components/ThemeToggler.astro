---
import { Icon } from "astro-icon/components";

const themes = [
    { name: "os-default", icon: "ri:contrast-fill" },
    { name: "light", icon: "ri:sun-fill" },
    { name: "dark", icon: "ri:moon-line" },
];
---

<div class="flex gap-3 forced-colors:hidden">
    {
        themes.map((theme) => (
            <button
                type="button"
                class="theme-toggler opacity-75 aria-pressed:opacity-100 hover:opacity-100"
                aria-pressed="false"
                aria-label={`Switch to ${theme.name}`}
                data-theme={theme.name}
            >
                <Icon name={theme.icon} class="fill-current" />
            </button>
        ))
    }
</div>
<script>
    import { theme } from "../store";
    theme.subscribe((newTheme: string, oldTheme: string | undefined) => {
        oldTheme && document.documentElement.classList.remove(oldTheme);
        document
            .querySelector(`.theme-toggler[data-theme="${oldTheme}"]`)
            ?.setAttribute("aria-pressed", "false");
        document
            .querySelector(`.theme-toggler[data-theme="${newTheme}"]`)
            ?.setAttribute("aria-pressed", "true");
        document.documentElement.classList.add(newTheme);
    });
    function applyTheme(theme: string | null) {
        if (theme === "dark") {
            document.documentElement.classList.add("dark");
            localStorage.theme = "dark";
        } else if (theme === "light") {
            document.documentElement.classList.remove("dark");
            localStorage.theme = "light";
        } else {
            localStorage.removeItem("theme");
            if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
                document.documentElement.classList.add("dark");
            } else {
                document.documentElement.classList.remove("dark");
            }
        }
        updateAriaPressed(theme);
    }

    function updateAriaPressed(theme: string | null) {
        document.querySelectorAll(".theme-toggler").forEach((button) => {
            button.setAttribute(
                "aria-pressed",
                button.getAttribute("data-theme") === theme ? "true" : "false",
            );
        });
    }

    document.addEventListener("DOMContentLoaded", function () {
        const currentTheme = localStorage.theme || "os-default";
        applyTheme(currentTheme);
        updateAriaPressed(currentTheme);

        document.querySelectorAll(".theme-toggler").forEach((button) => {
            button.addEventListener("click", () => {
                applyTheme(button.getAttribute("data-theme"));
            });
        });

        window
            .matchMedia("(prefers-color-scheme: dark)")
            .addEventListener("change", (e) => {
                if (!("theme" in localStorage)) {
                    applyTheme(e.matches ? "dark" : "light");
                }
            });
    });
</script>
